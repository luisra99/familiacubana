stages:
  - build
  #  - test
  #  - release
  - deploy

variables:
  IMAGEN_NAME: $CI_REGISTRY_IMAGE
  MS_SLUG: $CI_PROJECT_NAME

before_script:
  - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY || true
  - docker network create --driver=overlay --attachable $SWARM_NETWORK || true

#INICIO CONSTRUCCION-----------------------------------
#Se contrulle la última versión estable del entorno de desarrollo
build_main:
  stage: build
  tags:
    - development
  environment:
    name: staging
  script:
    - docker build $EXTRA_BUILD --pull -t $IMAGEN_NAME .
    - docker push $IMAGEN_NAME
  only:
    - main

#Se contrulle la solicitud de merge
build_merge_request:
  extends: build_main
  variables:
    IMAGEN_NAME: '$CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME'
    MS_SLUG: ${CI_PROJECT_NAME}_${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
  environment:
    name: "merge_request"
  only:
    - merge_requests
  except:
    - main

#Se construlle el entorno de pre_produccion(xutil)
build_pre_production:
  extends: build_main
  variables:
    IMAGEN_NAME: '$CI_REGISTRY_IMAGE:pre-production'
    MS_SLUG: $CI_PROJECT_NAME
  when: manual
  environment:
    name: pre-production
  only:
    - main
#FIN CONSTRUCCION-------------------------------------

#INICIO DESPLIEGUES-----------------------------------
#Desplegando la solicitud de merge
deploy_staging:
  stage: deploy
  tags:
    - development
  script:
    - docker pull $IMAGEN_NAME
    - docker container stop $MS_SLUG || true
    - docker container rm $MS_SLUG || true
    - docker run -dit -P --name $MS_SLUG --restart=always
      --network=$SWARM_NETWORK --network-alias=$MS_SLUG --cpus 0.2 --memory 256MB
      $EXTRA_CONFIG
      $IMAGEN_NAME
  environment:
    name: staging
    url: ${VITE_SERVER_URL}${VITE_APP_BASE_URL}
  only:
    - main
  after_script:
    - docker exec nginx-proxy-manager nginx -s reload
  #  - docker restart $GATEWAY_SERVICE_NAME || true

#Desplegando versión estable en un servidor intermedio
deploy_merge_request:
  extends: deploy_staging
  variables:
    IMAGEN_NAME: "$CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
    MS_SLUG: ${CI_PROJECT_NAME}_${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
  environment:
    name: merge_request/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    url: ${VITE_SERVER_URL}${VITE_APP_BASE_URL}
  only:
    - merge_requests
  except:
    - main

#despegando entorno de pre_produccion(xutil)
deploy_pre_production:
  stage: deploy
  tags:
    - pre-production
  script:
    - docker stack deploy --prune --with-registry-auth -c docker-compose.yml $MS_SLUG
  only:
    - main
  when: manual
  environment:
    name: pre-production
    url: ${VITE_SERVER_URL}${VITE_APP_BASE_URL}
